_start_if_enabled() {
    if systemctl -q is-enabled authentik-ldap.service ;then
        echo "  Starting authentik-ldap service"
        systemctl start authentik-ldap.service
    fi
}

_stop_if_active() {
    if systemctl -q is-active authentik-ldap.service ;then
        echo "  Stoping authentik ldap service"
        systemctl stop authentik-ldap.service
    fi
}

_disable_if_enabled() {
    if systemctl -q is-enabled authentik-ldap.service 2>/dev/null ;then
        echo "  Disabling authentik ldap service"
        systemctl disable authentik-ldap.service
    fi
}

_authentik_home=/var/lib/authentik

pre_install() {
    if getent passwd authentik >/dev/null; then
        local _OldHome="$( getent passwd authentik | cut -d: -f6 )"
        if [[ ${_OldHome} != "${_authentik_home}" ]]; then
            echo "  Setting authentik home directory to ${_authentik_home}"
            echo "  You must migrate from ${_OldHome}" to ${_authentik_home}
            echo "  before starting or re-enabling service"
            usermod -c 'Authentik service user' -g authentik -d ${_authentik_home} -L -s /bin/bash authentik
            _disable_if_enabled
        fi
    fi
}

post_install(){
    echo "This proxy can be configured interactively by running configure-authentik-proxy or setting the appropriate variables in /etc/conf.d/authentik-proxy";
    systemctl daemon-reload
}
pre_upgrade() {
    _stop_if_active
    pre_install
}

post_upgrade() {
    systemctl daemon-reload
    _start_if_enabled
}

pre_remove() {
    _stop_if_active
    _disable_if_enabled
}

post_remove() {
    if getent passwd authentik >/dev/null; then
        userdel authentik
    fi
    if getent group authentik >/dev/null; then
        groupdel authentik
    fi
    systemctl daemon-reload
    echo "  You may need to manually remove an old Authentik home: ${_authentik_home}"
}
